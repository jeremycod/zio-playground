package dev.zio.caliban.subgraph

import dev.zio.generated.Types.{
  Campaign,
  CampaignD2C,
  CampaignIAP,
  CodeGenTask,
  Cohort,
  Country,
  Currency,
  Entitlement,
  EntitlementFromEDC,
  EventCohort,
  MessagingConfig,
  MutationAnalyzePriceChangeEventArgs,
  MutationCreateAndUpdatePriceChangeEventCohortArgs,
  MutationCreateBaseProductArgs,
  MutationCreateCampaignD2CArgs,
  MutationCreateCampaignIAPArgs,
  MutationCreateCohortArgs,
  MutationCreateEntitlementArgs,
  MutationCreateOfferD2CArgs,
  MutationCreateOfferIAPArgs,
  MutationCreateOneTimePurchaseProductArgs,
  MutationCreatePartnerArgs,
  MutationCreatePriceChangeCohortsArgs,
  MutationCreatePriceChangeEventArgs,
  MutationCreatePriceChangeOffersArgs,
  MutationCreateRedemptionCodesArgs,
  MutationCreateSkuArgs,
  MutationSubmitEventApprovalArgs,
  MutationUpdateBaseProductArgs,
  MutationUpdateCampaignD2CArgs,
  MutationUpdateCampaignIAPArgs,
  MutationUpdateCampaignReportAsPaidArgs,
  MutationUpdateCampaignStatusArgs,
  MutationUpdateCohortArgs,
  MutationUpdateOfferAccountingArgs,
  MutationUpdateOfferD2CArgs,
  MutationUpdateOfferIAPArgs,
  MutationUpdateOfferStatusArgs,
  MutationUpdateOneTimePurchaseProductArgs,
  MutationUpdatePartnerArgs,
  MutationUpdateProductStatusArgs,
  MutationUpdateSkuArgs,
  MutationValidatePriceChangeEventArgs,
  Offer,
  Package,
  Partner,
  PriceChangeEvent,
  Product,
  QueryCampaignArgs,
  QueryCohortArgs,
  QueryCohortResolversArgs,
  QueryCohortsArgs,
  QueryConfigServicePayloadArgs,
  QueryEntitlementFromEDCArgs,
  QueryEntitlementsFromEDCArgs,
  QueryEventCohortArgs,
  QueryEventCohortsArgs,
  QueryOfferArgs,
  QueryOffersArgs,
  QueryPackageArgs,
  QueryPartnerArgs,
  QueryPriceChangeEventArgs,
  QueryProductArgs,
  QueryProductsArgs,
  QueryRedemptionCodeInfoArgs,
  QueryRedemptionCodeTasksArgs,
  QueryRedemptionCodesArgs,
  QueryReferenceOffersArgs,
  QuerySkuArgs,
  QuerySubpartnerArgs,
  QueryTierDefinitionArgs,
  QueryVanellopeGatewayPayloadArgs,
  RedemptionCodeResponse,
  Resolver,
  SKU,
  Subpartner,
  SyncEvent,
  TierDefinition
}

object Operations {

  final case class Query(
      offer: QueryOfferArgs => zio.UIO[scala.Option[Offer]],
      offers: QueryOffersArgs => zio.UIO[List[Offer]],
      referenceOffers: QueryReferenceOffersArgs => zio.UIO[List[Offer]],
      product: QueryProductArgs => zio.UIO[scala.Option[Product]],
      products: QueryProductsArgs => zio.UIO[List[Product]],
      entitlements: zio.UIO[List[Entitlement]],
      entitlementsFromEDC: QueryEntitlementsFromEDCArgs => zio.UIO[List[EntitlementFromEDC]],
      entitlementFromEDC: QueryEntitlementFromEDCArgs => zio.UIO[scala.Option[EntitlementFromEDC]],
      campaign: QueryCampaignArgs => zio.UIO[scala.Option[Campaign]],
      campaigns: zio.UIO[List[Campaign]],
      partner: QueryPartnerArgs => zio.UIO[scala.Option[Partner]],
      partners: zio.UIO[List[Partner]],
      subpartner: QuerySubpartnerArgs => zio.UIO[scala.Option[Subpartner]],
      subpartners: zio.UIO[List[Subpartner]],
      cohortResolvers: QueryCohortResolversArgs => zio.UIO[List[Resolver]],
      cohorts: QueryCohortsArgs => zio.UIO[List[Cohort]],
      cohort: QueryCohortArgs => zio.UIO[Cohort],
      `package`: QueryPackageArgs => zio.UIO[scala.Option[Package]],
      packages: zio.UIO[List[Package]],
      countries: zio.UIO[List[Country]],
      currencies: zio.UIO[List[Currency]],
      priceChangeEvent: QueryPriceChangeEventArgs => zio.UIO[scala.Option[PriceChangeEvent]],
      priceChangeEvents: zio.UIO[List[PriceChangeEvent]],
      eventCohort: QueryEventCohortArgs => zio.UIO[scala.Option[EventCohort]],
      eventCohorts: QueryEventCohortsArgs => zio.UIO[List[EventCohort]],
      messagingConfigs: zio.UIO[List[MessagingConfig]],
      vanellopeGatewayPayload: QueryVanellopeGatewayPayloadArgs => zio.UIO[String],
      configServicePayload: QueryConfigServicePayloadArgs => zio.UIO[String],
      sku: QuerySkuArgs => zio.UIO[scala.Option[SKU]],
      skus: zio.UIO[List[SKU]],
      redemptionCodes: QueryRedemptionCodesArgs => zio.UIO[scala.Option[String]],
      redemptionCodeTasks: QueryRedemptionCodeTasksArgs => zio.UIO[List[CodeGenTask]],
      redemptionCodeInfo: QueryRedemptionCodeInfoArgs => zio.UIO[RedemptionCodeResponse],
      tierDefinitions: zio.UIO[List[TierDefinition]],
      tierDefinition: QueryTierDefinitionArgs => zio.UIO[scala.Option[TierDefinition]]
  )

  final case class Mutation(
      createOfferD2C: MutationCreateOfferD2CArgs => zio.UIO[scala.Option[Offer]],
      updateOfferD2C: MutationUpdateOfferD2CArgs => zio.UIO[scala.Option[Offer]],
      createOfferIAP: MutationCreateOfferIAPArgs => zio.UIO[scala.Option[Offer]],
      updateOfferIAP: MutationUpdateOfferIAPArgs => zio.UIO[scala.Option[Offer]],
      updateOfferStatus: MutationUpdateOfferStatusArgs => zio.UIO[scala.Option[Offer]],
      updateOfferAccounting: MutationUpdateOfferAccountingArgs => zio.UIO[scala.Option[Offer]],
      createBaseProduct: MutationCreateBaseProductArgs => zio.UIO[Product],
      updateBaseProduct: MutationUpdateBaseProductArgs => zio.UIO[Product],
      createOneTimePurchaseProduct: MutationCreateOneTimePurchaseProductArgs => zio.UIO[Product],
      updateOneTimePurchaseProduct: MutationUpdateOneTimePurchaseProductArgs => zio.UIO[Product],
      updateProductStatus: MutationUpdateProductStatusArgs => zio.UIO[Product],
      createEntitlement: MutationCreateEntitlementArgs => zio.UIO[Entitlement],
      createCampaignD2C: MutationCreateCampaignD2CArgs => zio.UIO[scala.Option[CampaignD2C]],
      updateCampaignD2C: MutationUpdateCampaignD2CArgs => zio.UIO[scala.Option[CampaignD2C]],
      createCampaignIAP: MutationCreateCampaignIAPArgs => zio.UIO[scala.Option[CampaignIAP]],
      updateCampaignIAP: MutationUpdateCampaignIAPArgs => zio.UIO[scala.Option[CampaignIAP]],
      updateCampaignStatus: MutationUpdateCampaignStatusArgs => zio.UIO[scala.Option[Campaign]],
      updateCampaignReportAsPaid: MutationUpdateCampaignReportAsPaidArgs => zio.UIO[scala.Option[CampaignD2C]],
      updatePartner: MutationUpdatePartnerArgs => zio.UIO[Partner],
      createPartner: MutationCreatePartnerArgs => zio.UIO[Partner],
      createCohort: MutationCreateCohortArgs => zio.UIO[Cohort],
      updateCohort: MutationUpdateCohortArgs => zio.UIO[Cohort],
      createPriceChangeEvent: MutationCreatePriceChangeEventArgs => zio.UIO[scala.Option[PriceChangeEvent]],
      createPriceChangeCohorts: MutationCreatePriceChangeCohortsArgs => zio.UIO[scala.Option[PriceChangeEvent]],
      createAndUpdatePriceChangeEventCohort: MutationCreateAndUpdatePriceChangeEventCohortArgs => zio.UIO[EventCohort],
      analyzePriceChangeEvent: MutationAnalyzePriceChangeEventArgs => zio.UIO[scala.Option[PriceChangeEvent]],
      validatePriceChangeEvent: MutationValidatePriceChangeEventArgs => zio.UIO[scala.Option[PriceChangeEvent]],
      submitEventApproval: MutationSubmitEventApprovalArgs => zio.UIO[scala.Option[PriceChangeEvent]],
      triggerPricingScheduleMessagingSync: zio.UIO[scala.Option[SyncEvent]],
      createPriceChangeOffers: MutationCreatePriceChangeOffersArgs => zio.UIO[scala.Option[PriceChangeEvent]],
      createSku: MutationCreateSkuArgs => zio.UIO[SKU],
      updateSku: MutationUpdateSkuArgs => zio.UIO[SKU],
      createRedemptionCodes: MutationCreateRedemptionCodesArgs => zio.UIO[CodeGenTask]
  )

}
