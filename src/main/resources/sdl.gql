type Query {
  offer(id: ID!): Offer
  offers(offerIds: [ID!], offerFilter: OffersFilter): [Offer!]!
  referenceOffers(
    currency: String!
    billingFrequency: String!
    productIds: [String!]!
  ): [Offer!]!
  product(id: ID!): Product
  products(types: [String!], productIds: [ID!]): [Product!]!
  entitlements: [Entitlement!]!
  entitlementsFromEDC(
    type: EntitlementType
    tags: [Tag!]
  ): [EntitlementFromEDC!]!
  entitlementFromEDC(id: ID!): EntitlementFromEDC
  campaign(id: ID!): Campaign
  campaigns: [Campaign!]!
  partner(id: ID!): Partner
  partners: [Partner!]!
  subpartner(id: ID!): Subpartner
  subpartners: [Subpartner!]!
  cohortResolvers(view: CohortView): [Resolver!]!
  cohorts(view: CohortView): [Cohort!]!
  cohort(id: ID!): Cohort!
  package(id: String!): Package
  packages: [Package!]!
  countries: [Country!]!
  currencies: [Currency!]!
  priceChangeEvent(id: ID!): PriceChangeEvent
  priceChangeEvents: [PriceChangeEvent!]!
  eventCohort(priceChangeEventId: ID!, cohort: ID!): EventCohort
  eventCohorts(priceChangeEventId: ID!): [EventCohort!]!
  messagingConfigs: [MessagingConfig!]!
  vanellopeGatewayPayload(payload: PriceChangeEventStatusInput!): String!
  configServicePayload(priceChangeEventId: ID): String!
  sku(id: ID!): SKU
  skus: [SKU!]!
  redemptionCodes(campaignId: ID!, taskId: ID!, brand: Brand!): String
  redemptionCodeTasks(campaignId: ID!): [CodeGenTask!]!
  redemptionCodeInfo(code: String!): RedemptionCodeResponse!
  tierDefinitions: [TierDefinition!]!
  tierDefinition(id: ID!): TierDefinition
}

type Mutation {
  createOfferD2C(offer: CreateOrEditOfferD2CInput!): Offer
  updateOfferD2C(id: ID!, offer: CreateOrEditOfferD2CInput!): Offer
  createOfferIAP(offer: CreateOrEditOfferIAPInput!): Offer
  updateOfferIAP(id: ID!, offer: CreateOrEditOfferIAPInput!): Offer
  updateOfferStatus(id: ID!, status: OfferStatusEnum!): Offer
  updateOfferAccounting(
    id: ID!
    offerAccounting: [EditOfferAccountingInput!]!
  ): Offer
  createBaseProduct(product: CreateOrEditBaseProductInput!): Product!
  updateBaseProduct(id: ID!, product: CreateOrEditBaseProductInput!): Product!
  createOneTimePurchaseProduct(
    product: CreateOrEditOneTimePurchaseProductInput!
  ): Product!
  updateOneTimePurchaseProduct(
    id: ID!
    product: CreateOrEditOneTimePurchaseProductInput!
  ): Product!
  updateProductStatus(id: ID!, status: ProductStatusType!): Product!
  createEntitlement(entitlement: CreateEntitlementInput!): Entitlement!
  createCampaignD2C(campaign: CreateOrEditCampaignD2CInput!): CampaignD2C
  updateCampaignD2C(
    id: ID!
    campaign: CreateOrEditCampaignD2CInput!
  ): CampaignD2C
  createCampaignIAP(campaign: CreateOrEditCampaignIAPInput!): CampaignIAP
  updateCampaignIAP(
    id: ID!
    campaign: CreateOrEditCampaignIAPInput!
  ): CampaignIAP
  updateCampaignStatus(id: ID!, status: CampaignStatusEnum!): Campaign
  updateCampaignReportAsPaid(id: ID!, isReportAsPaid: Boolean!): CampaignD2C
  updatePartner(
    id: ID!
    partialPartnerPayload: UpdatePartnerPartialPayload!
  ): Partner!
  createPartner(partner: CreatePartnerPayload!): Partner!
  createCohort(cohortPayload: CreateCohortPayload!): Cohort!
  updateCohort(id: ID!, cohortPayload: UpdateCohortPayload!): Cohort!
  createPriceChangeEvent(event: CreatePriceChangeEventInput!): PriceChangeEvent
  createPriceChangeCohorts(
    payload: CreatePriceChangeCohortsInput!
  ): PriceChangeEvent
  createAndUpdatePriceChangeEventCohort(
    payload: CreateUpdatePriceChangeEventCohortInput!
  ): EventCohort!
  analyzePriceChangeEvent(
    payload: PriceChangeEventStatusInput!
  ): PriceChangeEvent
  validatePriceChangeEvent(
    payload: PriceChangeEventStatusInput!
  ): PriceChangeEvent
  submitEventApproval(payload: SubmitEventApprovalInput!): PriceChangeEvent
  triggerPricingScheduleMessagingSync: SyncEvent
  createPriceChangeOffers(
    payload: CreatePriceChangeOffersInput!
  ): PriceChangeEvent @deprecated
  createSku(sku: CreateSkuInput!): SKU!
  updateSku(id: ID!, input: UpdateSkuInput!): SKU!
  createRedemptionCodes(
    redemptionCodesInput: CreateRedemptionCodesInput!
  ): CodeGenTask!
}

enum BillingType {
  DIRECT_BILLING
  ThirdPP
  IAP
}

enum OfferStatusEnum {
  DRAFT
  NEEDS_REVIEW
  FINANCE_REVIEW
  FINANCE_APPROVED
  LIVE
  LIVE_WITH_EDITS
  DEACTIVATED
  UNSUPPORTED
}

enum PriceType {
  RETAIL
  PROMO
  NONE
}

input ReferenceLinkPayload {
  key: String!
  url: String!
}

type ReferenceLink {
  key: String!
  url: String!
}

input CountryPayload {
  id: String
  countryCode: String
  name: String
  region: String
  currencies: [CurrencyPayload]
}

type Country {
  id: String!
  countryCode: String!
  name: String!
  region: String!
  currencies: [Currency!]!
}

type OfferSku {
  name: String!
  key: String!
  countries: [Country!]!
  countryIds: [String!]!
}

enum Brand {
  DISNEY
  LAUNCHPAD
  STAR
  ESPN
  HULU
}

enum BillingFrequency {
  NONE
  ONCE
  DAY
  MONTH
  YEAR
}

enum PartnerPaidAmount {
  RETAIL
  WHOLESALE
  NONE_PAID
}

enum PaidUpon {
  ENROLLMENT
  ACTIVATION
  NONE
}

enum TransitionDateOperatorEnum {
  LESS_THAN
  LESS_THAN_EQUAL_TO
  EQUALS
  GREATER_THAN_EQUAL_TO
  GREATER_THAN
}

enum TransitionReason {
  PRICE_CHANGE
  LEGAL_COMPLIANCE
  MLB_SEASON_END
  PROMOTION_EXPIRATION
}

type CohortEligibility {
  includedCohorts: [Cohort!]!
  excludedCohorts: [Cohort!]!
  includedCohortIds: [ID!]!
  excludedCohortIds: [ID!]!
}

type Transition {
  id: ID!
  eligibility: CohortEligibility!
  transitionDate: String
  transitionDateOperator: TransitionDateOperatorEnum
  transitionOffer: Offer!
  transitionReason: TransitionReason!
}

enum DurationUnit {
  MONTH
  YEAR
  WEEK
  DAY
  ONCE
}

type DurationLength {
  durationLength: Int
  durationUnit: DurationUnit
}

type DurationDate {
  endDate: String!
}

union Duration = DurationLength | DurationDate

interface Offer {
  id: ID!
  legacyId: ID
  name: String!
  description: String
  createdBy: String!
  createdDate: String!
  updatedBy: String!
  updatedDate: String!
  offerDiscountId: ID
  priceType: PriceType!
  billingType: BillingType!
  startDate: String!
  endDate: String
  referenceLinks: [ReferenceLink!]!
  countries: [Country!]!
  status: OfferStatusEnum!
  packageId: String
  package: Package
  products: [Product!]!
  productPhaseData: [ProductPhaseData!]!
  legacySkus: [OfferSku!]!
  transitions: [Transition!]!
  campaigns: [Campaign!]
  brands: [Brand!]!
}

type OfferD2C implements Offer {
  id: ID!
  legacyId: ID
  name: String!
  description: String
  createdBy: String!
  createdDate: String!
  updatedBy: String!
  updatedDate: String!
  offerDiscountId: ID
  priceType: PriceType!
  billingType: BillingType!
  startDate: String!
  endDate: String
  referenceLinks: [ReferenceLink!]!
  countries: [Country!]!
  status: OfferStatusEnum!
  packageId: String
  package: Package
  currency: Currency!
  billingFrequency: BillingFrequency!
  products: [Product!]!
  referenceOffers: [Offer!]!
  productPhaseData: [ProductPhaseData!]!
  legacySkus: [OfferSku!]!
  transitions: [Transition!]!
  campaigns: [Campaign!]
  brands: [Brand!]!
  offerPhases: [OfferPhase!]!
}

enum PromoType3PP {
  PROMO_DURATION
  FREE_TRIAL
  NONE
}

enum PartnerSaleTypeEnum {
  A_LA_CARTE
  BUNDLE
}

type Offer3PP implements Offer {
  id: ID!
  legacyId: ID
  name: String!
  description: String
  createdBy: String!
  createdDate: String!
  updatedBy: String!
  updatedDate: String!
  offerDiscountId: ID
  priceType: PriceType!
  billingType: BillingType!
  startDate: String!
  endDate: String
  referenceLinks: [ReferenceLink!]!
  countries: [Country!]!
  status: OfferStatusEnum!
  packageId: String
  package: Package
  promoType3PP: PromoType3PP!
  partnerSaleType: PartnerSaleTypeEnum!
  partnerPaidAmount: PartnerPaidAmount!
  paidUpon: PaidUpon!
  products: [Product!]!
  referenceOffers: [Offer!]!
  productPhaseData: [ProductPhaseData!]!
  legacySkus: [OfferSku!]!
  transitions: [Transition!]!
  campaigns: [Campaign!]
  brands: [Brand!]!
  durationLength: DurationLength
}

type OfferIAP implements Offer {
  id: ID!
  legacyId: ID
  name: String!
  description: String
  createdBy: String!
  createdDate: String!
  updatedBy: String!
  updatedDate: String!
  offerDiscountId: ID
  billingFrequency: BillingFrequency!
  priceType: PriceType!
  billingType: BillingType!
  startDate: String!
  endDate: String
  referenceLinks: [ReferenceLink!]!
  countries: [Country!]!
  status: OfferStatusEnum!
  packageId: String
  package: Package
  products: [Product!]!
  referenceOffers: [Offer!]!
  productPhaseData: [ProductPhaseData!]!
  legacySkus: [OfferSku!]!
  transitions: [Transition!]!
  campaigns: [Campaign!]
  brands: [Brand!]!
  offerPhases: [IAPPhase!]!
}

type ProductPhaseData {
  offerId: ID!
  productId: ID!
  phaseId: ID
  retailPriceId: ID
  referenceOfferId: ID
  legacy: String
}

input OfferAccountingDiscountInput {
  discountId: String!
  discountAmount: Int!
  productId: ID!
}

input EditOfferAccountingInput {
  phaseId: ID!
  discounts: [OfferAccountingDiscountInput!]!
}

enum PriceTypeInput {
  RETAIL
  PROMO
}

input OfferTransitionInput {
  targetOfferId: String!
  transitionReason: String!
  transitionDate: String
  transitionDateOperator: String
  eligibleCohorts: [String!]!
  ineligibleCohorts: [String!]!
}

input RetailPhaseInput {
  finalPrice: Int!
}

enum PhaseTypeEnum {
  RETAIL
  FREE_TRIAL
  DISCOUNT
  PREPAID
}

input PromoPhaseInput {
  type: PhaseTypeEnum!
  finalPrice: Int!
  durationLength: String
  durationUnit: DurationUnit
  phaseEndDate: String
}

input CreateOrEditOfferD2CInput {
  name: String!
  description: String
  offerType: String
  priceType: PriceTypeInput!
  startDate: String
  endDate: String
  referenceLinks: [ReferenceLinkPayload!]!
  products: [String!]!
  countries: [String!]!
  billingFrequency: BillingFrequency!
  currencyCode: String!
  referenceOffers: [String!]!
  status: OfferStatusEnum!
  packageId: String
  transitions: [OfferTransitionInput!]!
  retailPhases: [RetailPhaseInput!]!
  promoPhases: [PromoPhaseInput!]!
}

input CreateOrEditOfferIAPInput {
  id: ID
  name: String!
  description: String
  offerType: String
  priceType: PriceTypeInput!
  startDate: String
  endDate: String
  referenceLinks: [ReferenceLinkPayload!]!
  products: [String!]!
  countries: [String!]!
  billingFrequency: BillingFrequency!
  status: OfferStatusEnum!
  packageId: String
  iapPhases: [IAPPhaseInput!]!
}

input IAPPhaseInput {
  type: PhaseTypeEnum!
  durationLength: String
  durationUnit: DurationUnit
}

input OffersFilter {
  billingType: BillingType!
}

enum PhaseType {
  DISCOUNT
  FREE_TRIAL
  PREPAID
  RETAIL
  SPLIT_BILLING
}

enum Eligibility {
  NEW
  SUBSCRIBED
  RETURNING
  REACQUIRED
}

enum PaymentType {
  MP_PAID
  DSS_PAID
  USER_PAID
}

interface OfferPhase {
  id: ID!
  type: PhaseType!
  phaseOrder: Int!
  breakdowns: [Breakdown!]!
  finalPrice: Int!
  products: [Product!]!
  offer: Offer!
  offerId: ID!
}

type RetailPhase implements OfferPhase {
  id: ID!
  type: PhaseType!
  phaseOrder: Int!
  breakdowns: [Breakdown!]!
  finalPrice: Int!
  products: [Product!]!
  offer: Offer!
  offerId: ID!
}

type DiscountPhase implements OfferPhase {
  id: ID!
  type: PhaseType!
  phaseOrder: Int!
  durationLength: DurationLength
  finalPrice: Int!
  breakdowns: [Breakdown!]!
  products: [Product!]!
  offer: Offer!
  discountAmount: Int!
  discountCurrency: Currency!
  offerId: ID!
}

type FreeTrialPhase implements OfferPhase {
  id: ID!
  type: PhaseType!
  phaseOrder: Int!
  duration: Duration!
  paymentPaths: [FreeTrialPath!]!
  finalPrice: Int!
  breakdowns: [Breakdown!]!
  products: [Product!]!
  offer: Offer!
  offerId: ID!
}

type PrePaidPhase implements OfferPhase {
  id: ID!
  type: PhaseType!
  phaseOrder: Int!
  durationLength: DurationLength
  finalPrice: Int!
  breakdowns: [Breakdown!]!
  products: [Product!]!
  offer: Offer!
  offerId: ID!
}

type IAPPhase {
  id: ID!
  type: PhaseType!
  phaseOrder: Int!
  products: [Product!]!
  duration: Duration
  offerId: ID!
}

type Breakdown {
  phaseOrder: Int!
  phaseId: ID!
  phaseType: PhaseType!
  offerId: ID!
  productId: ID!
  discountId: ID!
  finalPrice: Int
  finalPriceAfterDiscount: Int
  discount: Discount!
  product: Product!
  currency: Currency!
}

type Discount {
  id: String!
  discountAmount: Int!
  currency: Currency!
  product: Product!
  productId: ID!
}

type FreeTrialBreakdown {
  id: String!
  paymentType: PaymentType!
  durationLength: DurationLength!
}

type FreeTrialPath {
  eligibility: [Eligibility!]!
  paymentBreakdown: [FreeTrialBreakdown!]!
  products: [Product!]!
}

enum ProductEntityType {
  LIVE_TV
  PAY_PER_VIEW
  PREMIUM_NETWORKS
  BASE
  TEST
  PREMIER_ACCESS
  SEASONAL
  FEATURE
  ONE_TIME_PURCHASE
}

enum ProductStatusType {
  DRAFT
  LIVE
  LIVE_WITH_EDITS
}

interface Product {
  id: ID!
  legacyId: String
  name: String!
  description: String
  type: ProductEntityType!
  createdBy: String!
  createdDate: String!
  updatedBy: String
  updatedDate: String
  status: String!
  entitlements: [Entitlement!]!
  tierDefinitions: [TierDefinition!]!
}

type BaseProduct implements Product {
  id: ID!
  legacyId: String
  name: String!
  description: String
  type: ProductEntityType!
  createdBy: String!
  createdDate: String!
  updatedBy: String
  updatedDate: String
  status: String!
  entitlements: [Entitlement!]!
  tierDefinitions: [TierDefinition!]!
}

type OneTimePurchaseProduct implements Product {
  id: ID!
  legacyId: String
  name: String!
  description: String
  type: ProductEntityType!
  createdBy: String!
  createdDate: String!
  updatedBy: String
  updatedDate: String
  entitlements: [Entitlement!]!
  tierDefinitions: [TierDefinition!]!
  status: String!
  startDate: String!
  endDate: String
}

input CreateOrEditBaseProductInput {
  name: String!
  description: String
  type: ProductEntityType!
  entitlements: [String!]!
  tierDefinitions: [EntitlementTierDefinition!]!
}

input CreateOrEditOneTimePurchaseProductInput {
  name: String!
  description: String
  type: ProductEntityType!
  entitlements: [String!]!
  tierDefinitions: [EntitlementTierDefinition!]!
  startDate: String!
  endDate: String!
}

input EntitlementTierDefinition {
  id: ID
  name: String!
  entitlements: [ProductTierEntitlement!]!
  countries: [String!]!
}

input ProductTierEntitlement {
  id: String
  value: Int
}

type Entitlement {
  id: String!
  name: String!
}

type EntitlementFromEDC {
  id: ID!
  description: String
  type: EntitlementType
  values: EntitlementValues
  resolver: EntitlementResolver
  tags: [Tag!]!
  valueType: String
}

type EntitlementValues {
  min: Int
  max: Int
  default: Int
  enumerations: [String!]!
}

enum EntitlementType {
  FEATURE
  CONTENT
}

enum Tag {
  SELLABLE
  OVERRIDE
}

enum EntitlementResolver {
  SUM
  MAX
  MIN
  ANY
}

input CreateEntitlementInput {
  name: String!
}

interface Campaign {
  id: ID!
  legacyIds: [String!]!
  name: String!
  description: String
  billingType: CampaignBilling!
  brand: Brand!
  countries: [Country!]!
  referenceLinks: [ReferenceLink!]!
  createdBy: String
  createdDate: String
  updatedBy: String
  updatedDate: String
  status: String!
  startDate: String!

  """
  null for Unlimited
  """
  endDate: String
  legacySKUs: [SKU!]!
}

enum CampaignStatusEnum {
  DRAFT
  NEEDS_REVIEW
  FINANCE_REVIEW
  FINANCE_APPROVED
  LIVE
  LIVE_WITH_EDITS
  EXPIRED
  DEACTIVATED
}

type Voucher {
  id: String!
  offerId: String!
  countries: [String!]!
  platforms: [String!]!
  isActive: Boolean
}

type CampaignD2C implements Campaign {
  id: ID!
  legacyIds: [String!]!
  name: String!
  description: String
  billingType: CampaignBilling!
  brand: Brand!
  countries: [Country!]!
  referenceLinks: [ReferenceLink!]!
  createdBy: String
  createdDate: String
  updatedBy: String
  updatedDate: String
  status: String!
  vouchers: [Voucher!]!
  startDate: String!

  """
  null for Unlimited
  """
  endDate: String

  """
  Bamtech as default when checkbox is checked
  """
  promoPartner: PromoPartner!
  provider: String
  hasPaymentMethod: Boolean!
  hasSendExpirationNotices: Boolean!
  hasSignupFlow: Boolean!
  hasAccountManagement: Boolean!
  hasPreCancel: Boolean!
  hasConcessions: Boolean!
  isReportAsPaid: Boolean

  """
  null for customUrl field means to no customURL and string means the url
  """
  customUrl: String
  hasRedemptionCodeRequired: Boolean!
  isUpsell: Boolean!
  edcEntitlement: String
  upsellCohorts: [Cohort!]!
  platforms: [Platform!]!
  offerSets: [OfferSet!]!
  legacySKUs: [SKU!]!
}

type Platform {
  id: ID!
  name: String!
  isActive: Boolean!
}

type CampaignIAP implements Campaign {
  id: ID!
  legacyIds: [String!]!
  name: String!
  description: String
  billingType: CampaignBilling!
  brand: Brand!
  countries: [Country!]!
  platforms: [Platform!]!
  referenceLinks: [ReferenceLink!]!
  createdBy: String
  createdDate: String
  updatedBy: String
  updatedDate: String
  status: String!
  startDate: String!

  """
  null for Unlimited
  """
  endDate: String
  offerSets: [OfferSet!]!
  legacySKUs: [SKU!]!
  hasSignupFlow: Boolean!
  hasAccountManagement: Boolean!

  """
  null for customUrl field means to no customURL and string means the url
  """
  isUpsell: Boolean!
  edcEntitlement: String
  upsellCohorts: [Cohort!]!
}

type Campaign3PP implements Campaign {
  id: ID!
  legacyIds: [String!]!
  name: String!
  description: String
  billingType: CampaignBilling!
  brand: Brand!
  countries: [Country!]!
  referenceLinks: [ReferenceLink!]!
  createdBy: String
  createdDate: String
  updatedBy: String
  updatedDate: String
  status: String!
  startDate: String!

  """
  null for Unlimited
  """
  endDate: String
  billingPartner: Partner!
  sourceProvider: SourceProvider!
  offers: [Offer3PP!]!
  legacySKUs: [SKU!]!
}

enum CampaignBilling {
  BILLING_D2C
  BILLING_3PP
  BILLING_IAP
}

type PromoPartner {
  id: String!
  name: String!
}

input PromoPartnerPayload {
  id: String!
  name: String!
}

type OfferSet {
  id: ID!
  offers: [Offer!]!
  eligibility: EligibilityCohortInfo
}

input OfferSetPayload {
  id: ID!
  offers: [String!]!
  eligibility: EligibilityCohortInfoPayload
}

type SourceProvider {
  id: String!
  name: String!
  country: Country!
}

type EligibilityCohortInfo {
  includedCohorts: [Cohort!]!
  excludedCohorts: [Cohort!]!
}

input EligibilityCohortInfoPayload {
  includedCohorts: [String!]
  excludedCohorts: [String!]
}

input VoucherBody {
  id: String!
  offerId: String!
  countries: [String!]!
  platforms: [String!]!
  isActive: Boolean
}

input CreateOrEditCampaignD2CInput {
  name: String!
  description: String!
  billingType: CampaignBilling!
  brand: Brand!
  countries: [String!]!
  referenceLinks: [ReferenceLinkPayload!]
  startDate: String!
  endDate: String
  promoPartner: String
  provider: String
  hasPaymentMethod: Boolean
  hasSendExpirationNotices: Boolean
  hasSignupFlow: Boolean
  hasAccountManagement: Boolean
  hasPreCancel: Boolean
  hasConcessions: Boolean
  isReportAsPaid: Boolean
  customUrl: String
  hasRedemptionCodeRequired: Boolean
  isUpsell: Boolean
  edcEntitlement: String
  upsellCohortIds: [String!]
  platforms: [String!]
  offerSets: [OfferSetPayload!]
  vouchers: [VoucherBody!]
  status: CampaignStatusEnum!
}

input CreateOrEditCampaignIAPInput {
  name: String!
  description: String
  billingType: CampaignBilling!
  brand: Brand!
  startDate: String!
  endDate: String
  countries: [String!]!
  platforms: [String!]!
  offerSets: [OfferSetPayload!]
  referenceLinks: [ReferenceLinkPayload!]!
  status: CampaignStatusEnum!
  hasSignupFlow: Boolean
  hasAccountManagement: Boolean
  isUpsell: Boolean
  edcEntitlement: String
  upsellCohortIds: [String!]!
}

interface BasePartner {
  id: ID!
  name: String!
  status: PartnerStatus!
  referenceLinks: [ReferenceLink!]!
  paidUpon: BountyPaidUpon!
  specialRules: [PartnerBountyRule!]!
  bounties: [BasePartnerBounty!]!
  updatedBy: String!
  updatedDate: String!
}

enum PartnerStatus {
  DRAFT
  LIVE
  EDITED
  EXPIRED
}

type Partner implements BasePartner {
  id: ID!
  name: String!
  status: PartnerStatus!
  referenceLinks: [ReferenceLink!]!
  paidUpon: BountyPaidUpon!
  specialRules: [PartnerBountyRule!]!
  bounties: [BasePartnerBounty!]!
  types: [PartnerTypes!]!
  subpartners: [Subpartner!]!
  updatedBy: String!
  updatedDate: String!
}

input CreatePartnerPayload {
  name: String!
  types: [PartnerTypes!]!
  referenceLinks: [ReferenceLinkPayload!]!
  status: PartnerStatus!
}

input UpdatePartnerPartialPayload {
  name: String
  types: [PartnerTypes]
  referenceLinks: [ReferenceLinkPayload]
  subpartners: [SubpartnerPayload]
  paidUpon: BountyPaidUpon
  specialRules: [PartnerBountyRule]
  status: String
}

enum PartnerTypes {
  BILLING_3PP
  BILLING_IAP
  BILLING_DEVICE
}

type Subpartner implements BasePartner {
  id: ID!
  name: String!
  status: PartnerStatus!
  referenceLinks: [ReferenceLink!]!
  paidUpon: BountyPaidUpon!
  specialRules: [PartnerBountyRule!]!
  bounties: [BasePartnerBounty!]!
  types: [SubpartnerTypes!]!
  sourceProviderDisplayName: String
  sourceProviderCountry: Country
  updatedBy: String!
  updatedDate: String!
}

enum SubpartnerTypes {
  BILLING_3PP
  BILLING_IAP
  BILLING_DEVICE
  SOURCE_PROVIDER
}

input SubpartnerPayload {
  referenceLinks: [ReferenceLinkPayload]
  sourceProviderDisplayName: String
  sourceProviderCountry: CountryPayload
}

type Option {
  value: String!
  name: String!
}

type BooleanOption {
  value: Boolean!
  name: String!
}

type OptionsParam implements Param {
  fieldName: String!
  displayName: String!
  description: String!
  canBeNull: Boolean!
  type: ParamType!
  defaultValue: Option
  enumOptions: [Option!]!
}

type StringParam implements Param {
  fieldName: String!
  displayName: String!
  description: String
  canBeNull: Boolean!
  type: ParamType!
  defaultValue: [String!]
}

type DateTimeStringParam implements Param {
  fieldName: String!
  displayName: String!
  description: String
  canBeNull: Boolean!
  type: ParamType!
  defaultValue: String
}

type IntParam implements Param {
  fieldName: String!
  displayName: String!
  description: String
  canBeNull: Boolean!
  type: ParamType!
  defaultValue: Int
}

type BooleanParam implements Param {
  fieldName: String!
  displayName: String!
  description: String
  canBeNull: Boolean!
  type: ParamType!
  defaultValue: Boolean
  nestedParams: [Param!]!
}

type Cohort {
  id: ID!
  name: String!
  description: String!
  definition: String!
  active: Boolean!
}

input CreateCohortPayload {
  name: String!
  description: String
  definition: String!
}

input UpdateCohortPayload {
  name: String!
  description: String
  definition: String!
}

enum CohortView {
  UI
  UPSELL
  ALL
}

type Resolver {
  resolver: String!
  selectorName: String!
  description: String!
  operatorOptions: [BooleanOption!]!
  params: [Param!]!
}

enum ParamType {
  OptionsParam
  StringParam
  DateTimeStringParam
  DateTimeComparator
  TimeFrame_ParamsContainer
  IntParam
  ParamContainer
  BooleanParam
}

interface Param {
  fieldName: String!
  displayName: String!
  description: String
  canBeNull: Boolean!
  type: ParamType!
}

type ParamContainer implements Param {
  fieldName: String!
  displayName: String!
  description: String
  canBeNull: Boolean!
  type: ParamType!
  defaultValue: Param
  nestedParams: [Param!]!
}

type DateTimeComparator implements Param {
  fieldName: String!
  displayName: String!
  description: String
  canBeNull: Boolean!
  type: ParamType!
  defaultValue: Param
  nestedParams: [Param!]!
}

type Package {
  id: String!
  name: String!
  description: String
  type: ProductEntityType!
  products: [Product!]!
  status: String
  updatedDate: String
  updatedBy: String
}

enum BountyPaidUpon {
  CHARGE
  ACTIVATION
}

enum PartnerBountyRule {
  LG_LIFETIME_CAP_RULE
  LIFETIME_CAP_RULE
  MICROSOFT_ADD_ON_RULE
  PERPETUAL_RULE
  PWA_RULE
}

interface Bounty {
  id: ID!
  product: Product!
  bountyAmount: Int!
  durationLength: DurationLength!
}

type BasePartnerBounty implements Bounty {
  id: ID!
  product: Product!
  bountyAmount: Int!
  durationLength: DurationLength!
  subpartner: Subpartner
}

type Currency {
  code: String!
}

input CurrencyPayload {
  code: String!
}

enum PriceChangeEventStatus {
  DRAFT
  VALIDATED
  LIVE
}

type PriceChangeEvent {
  identifier: String!
  name: String!
  eventCohorts: [EventCohort!]!
  definitionId: String
  total: Int
  totalByCohort: [CohortCount!]!
  isCalculating: Boolean!
  status: PriceChangeEventStatus!
  updatedDate: String!
  updatedBy: String!
  type: PriceChangeEventType!
  newCustomersStartDate: String
  existingCustomersStartDate: String
  version: Int!
  eventDefinition: [EventDefinition!] @deprecated
}

enum PriceChangeEventType {
  PRICE_CHANGE
  ONE_TIME_SEND
}

type EventCohort {
  cohort: Cohort!
  eventOffers: [EventOffer!]!
  messagingConfigs: [MessagingConfig!]!
  cohortId: ID!
  priceChangeEventId: ID!
  version: Int!
}

type EventOffer {
  id: ID!
  fromOffer: OfferD2C!
  toOffer: OfferD2C
  newPlanName: String
  newPlanPrice: Int
  newPlanCurrency: Currency
  version: Int!
  newPlanCurrencyId: String
  fromOfferId: String!
  toOfferId: String
  cohortId: ID!
  priceChangeEventId: ID!
}

type MessagingConfig {
  id: ID!
  messageType: MessageType!
  qaConfigurationId: String!
  prodConfigurationId: String!
  messageTiming: MessageTiming!
  messageTimingFixedDate: String
  messageTimingDynamicDate: String
  messageTimingRangeDates: MessageTimingRangeDates
  priceChangeEventId: ID!
  cohortId: ID!
  version: Int!
}

type MessageTimingRangeDates {
  startDate: String!
  endDate: String
}

enum MessageType {
  EMAIL
  IN_APP
  PUSH
}

enum MessageTiming {
  MESSAGE_TIMING_FIXED_DATE
  MESSAGE_TIMING_DYNAMIC_DATE
  MESSAGE_TIMING_RANGE_DATES
}

type SyncEvent {
  publishedConfiguration: String!
}

type CohortCount {
  id: String!
  count: Int!
}

input CreatePriceChangeEventInput {
  identifier: String!
  name: String!
  type: PriceChangeEventType!
  newCustomersStartDate: String
  existingCustomersStartDate: String
}

input CreatePriceChangeCohortsInput {
  identifier: String!
  cohorts: [String!]!
}

input PriceChangeEventStatusInput {
  identifier: String!
}

input SubmitEventApprovalInput {
  identifier: String!
  definitionId: String!
}

input CreateUpdatePriceChangeEventCohortInput {
  priceChangeId: ID!
  cohortId: ID!
  eventOffers: [EventOfferInput!]!
  messagingConfigs: [MessagingConfigInput!]!
}

input EventOfferInput {
  id: ID
  fromOffer: String!
  toOffer: String
  newPlanName: String
  newPlanPrice: Int
  newPlanCurrency: String
}

input MessagingConfigInput {
  id: ID
  messageType: MessageType!
  qaConfigurationId: String!
  prodConfigurationId: String!
  messageTiming: MessageTiming!
  messageTimingFixedDate: String
  messageTimingDynamicDate: String
  messageTimingRangeDates: MessageTimingRangeDatesInput
}

input MessageTimingRangeDatesInput {
  startDate: String!
  endDate: String
}

type EventDefinition {
  offer: OfferD2C!
  transitionToOffer: OfferD2C!
  cohorts: [Cohort!]!
}

input CreatePriceChangeOffersInput {
  identifier: String!
  offers: [OfferTransitionOfferInput!]!
}

input OfferTransitionOfferInput {
  offerId: String!
  transitionToOffer: String
}

type SKU {
  id: ID!
  key: ID!
  name: String!
  description: String
  platform: String!
  countries: [Country!]!
  packages: [Package!]!
  products: [Product!]!
  offers: [Offer!]!
  campaigns: [Campaign!]
  updatedDate: String
  updatedBy: String
  billingType: BillingType!
  billingFrequency: BillingFrequency
  brand: Brand
  referenceLinks: [ReferenceLink!]!
}

input CreateSkuInput {
  id: ID!
  name: String!
  description: String
  platform: String!
  countries: [String!]!
  packageIds: [String!]!
  products: [String!]!
  offers: [String!]
  campaigns: [String!]
  billingType: String!
  billingFrequency: String
  brand: Brand
  referenceLinks: [ReferenceLinkPayload!]
}

input UpdateSkuInput {
  description: String!
  countries: [String!]!
  packageIds: [String!]!
  products: [String!]!
  offers: [String!]!
  campaigns: [String!]!
  billingFrequency: String
  brand: Brand
  referenceLinks: [ReferenceLinkPayload!]
}

input CreateRedemptionCodesInput {
  promotionInfo: PromotionInfoInput!
  codeConfig: RuleInput!
  isTest: Boolean!
  numberOfCodes: Int!
  brand: String!
}

type CodeGenTask {
  id: String!
  brand: Brand!
  status: CodeGenTaskStatus!
  fileUrl: String!
  isTest: Boolean!
  numberOfCodes: Int!
  createdDate: String!
  offerId: ID
  campaignId: ID
  createdBy: String
  offer: Offer
  campaign: Campaign
  lastDownloadedDate: String
  lastDownloadedBy: String
}

type RedemptionCodeResponse {
  redemptionCode: RedemptionCodeInfo!
  promotionInfo: PromotionInfo!
  creationInfo: CreationInfo!
}

type PromotionInfo {
  campaignId: String!
  offerId: String!
}

input PromotionInfoInput {
  campaignId: String!
  offerId: String!
}

type Rule {
  length: Int!
  pattern: String!
  prefix: String!
  postfix: String!
  excludes: String!
  case: String!
}

enum RulePattern {
  Alpha
  Alphanum
  Numeric
}

enum RuleCase {
  Lower
  Upper
  Mixed
}

enum CodeGenTaskStatus {
  PENDING
  PROCESSING
  PROCESSED
}

input RuleInput {
  length: Int!
  pattern: RulePattern!
  prefix: String!
  postfix: String!
  excludes: String!
  case: RuleCase!
}

type RedemptionCodeInfo {
  code: String!
  status: String!
  usage: String!
  partner: String!
}

type CreationInfo {
  createdAt: String!
  createdBy: String!
}

type TierDefinition {
  id: ID!
  name: String!
  description: String
  entitlementTierDefinitions: [EntitlementTierDefinitions!]!
  countryIds: [ID!]!
  countries: [Country!]
  createdBy: String!
  createdDate: String!
  updatedBy: String!
  updatedDate: String!
}

type EntitlementTierDefinitions {
  entitlementId: ID!
  entitlement: EntitlementFromEDC!
  value: Int
}
